@model IEnumerable<Mozaic.PasswordManager.Web.Models.ViewModels.SystemUserViewModel>
@{
    ViewData["Title"] = "Users List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var filter = new Mozaic.PasswordManager.Entities.SearchFilters.SystemUserSearchFilter
            {
                UserName = Context.Request.Query["username"].ToString(),
                Id = int.TryParse(Context.Request.Query["userId"], out var userId) ? (int?)userId : null,
                IsAdmin = bool.TryParse(Context.Request.Query["isAdmin"], out var isAdmin) ? (bool?)isAdmin : null
            };

    var manager = new Mozaic.PasswordManager.BL.SystemUserManager();
    var userList = manager.GetSystemUser(filter);
}

<div class="container mt-4">
    <h2 class="mb-4">System Users</h2>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <div class="mb-3">
        <form method="get">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search by username" name="username" value="@filter.UserName" />
                <input type="text" class="form-control ms-2" placeholder="Search by ID" name="userId" value="@filter.Id" />

                <div class="ms-2">
                    @Html.DropDownList("isAdmin", new List<SelectListItem>
                    {
                    new SelectListItem { Text = "All Roles", Value = "" },
                    new SelectListItem { Text = "Admin", Value = "true" },
                    new SelectListItem { Text = "User", Value = "false" }
                    }, new { @class = "form-select" })
                </div>

                <button class="btn btn-primary" type="submit">
                    <i class="bi bi-search"></i>
                </button>
                <a href="@Url.Action("Users")" class="btn btn-secondary ms-2">
                    <i class="bi bi-x-circle"></i>
                </a>
            </div>
        </form>
    </div>

    <div class="mb-3">
        <a href="@Url.Action("Register", "SystemUser")" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add User
        </a>
    </div>

    <div>
        @if (userList != null && userList.Any())
        {
            <p>Total Users: @userList.Count()</p>
            <p>
                Showing @userList.Count() results
                @if (!string.IsNullOrEmpty(filter.UserName) || filter.Id.HasValue || filter.IsAdmin.HasValue)
                {
                    <span>
                        for username '<strong>@filter.UserName</strong>', ID '<strong>@filter.Id</strong>' and role '<strong>@(filter.IsAdmin == true ? "Admin" : (filter.IsAdmin == false ? "User" : "All Roles"))</strong>'
                    </span>
                }
            </p>
        }
        else
        {
            <p>No users found.</p>
        }
    </div>

    <table class="table table-bordered table-hover mt-3">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Username</th>
                <th>Admin Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in userList)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.UserName</td>
                    <td>@(user.IsAdmin.HasValue && user.IsAdmin.Value ? "Admin" : "User")</td>

                    <td>
                        <a href="@Url.Action("Edit", "SystemUser", new { id = user.Id })" class="btn btn-primary">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <a href="@Url.Action("ChangePassword", "SystemUser", new { id = user.Id })" class="btn btn-warning">
                            <i class="bi bi-key"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
