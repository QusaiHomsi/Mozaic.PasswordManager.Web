@model IEnumerable<Mozaic.PasswordManager.Web.Models.ViewModels.SystemUserViewModel>
@{
    ViewData["Title"] = "Users List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var searchTerm = Context.Request.Query["username"].ToString();
    var searchId = Context.Request.Query["userId"].ToString();
    var isAdminQuery = Context.Request.Query["isAdmin"].ToString();

    var filteredUsers = Model.AsQueryable();

    if (!string.IsNullOrEmpty(searchTerm))
    {
        filteredUsers = filteredUsers.Where(u => u.UserName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));
    }

    if (!string.IsNullOrEmpty(searchId) && int.TryParse(searchId, out int userId))
    {
        filteredUsers = filteredUsers.Where(u => u.Id == userId);
    }

    if (!string.IsNullOrEmpty(isAdminQuery))
    {
        if (bool.TryParse(isAdminQuery, out bool isAdminBool))
        {
            filteredUsers = filteredUsers.Where(u => u.IsAdmin == isAdminBool);
        }
    }

    var adminOptions = new List<SelectListItem>
    {
        new SelectListItem { Text = "All Roles", Value = "" },
        new SelectListItem { Text = "Admin", Value = "true" },
        new SelectListItem { Text = "User", Value = "false" }
    };

    var selectedOption = adminOptions.FirstOrDefault(o => o.Value == isAdminQuery);
    if (selectedOption != null)
    {
        selectedOption.Selected = true;
    }

    var userList = filteredUsers.ToList();
}

<div class="container mt-4">
    <h2 class="mb-4">System Users</h2>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <div class="mb-3">
        <form method="get">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search by username" name="username" value="@searchTerm" />
                <input type="text" class="form-control ms-2" placeholder="Search by ID" name="userId" value="@searchId" />

                <div class="ms-2">
                    @Html.DropDownList("isAdmin", adminOptions,  new { @class = "form-select" })
                </div>

                <button class="btn btn-primary" type="submit">
                    <i class="bi bi-search"></i>
                </button>
                <a href="@Url.Action("Users")" class="btn btn-secondary ms-2">
                    <i class="bi bi-x-circle"></i>
                </a>
            </div>
        </form>
    </div>

    <div class="mb-3">
        <a href="@Url.Action("", "register")" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add User
        </a>
    </div>

    <div>
        @if (userList != null && userList.Any())
        {
            <p>Total Users: @userList.Count()</p>
            <p>
                Showing @userList.Count() results
                @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(searchId) || !string.IsNullOrEmpty(isAdminQuery))
                {
                    <span>
                        for username '<strong>@searchTerm</strong>', ID '<strong>@searchId</strong>' and role '<strong>@(isAdminQuery == "true" ? "Admin" : (isAdminQuery == "false" ? "User" : "All Roles"))</strong>'
                    </span>
                }
            </p>
        }
        else
        {
            <p>No users found.</p>
        }
    </div>

    <table class="table table-bordered table-hover mt-3">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Username</th>
                <th>Admin Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in userList)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.UserName</td>
                    <td>@(user.IsAdmin ? "Admin" : "User")</td>
                    <td>
                        <a href="@Url.Action("Edit", "SystemUser", new { id = user.Id })" class="btn btn-primary">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <a href="@Url.Action("ChangePassword", "SystemUser", new { id = user.Id })" class="btn btn-warning">
                            <i class="bi bi-key"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
